Порождающие паттерны.
Решения этой группы патернов позволяют скрывать логику создания обьектов.
Внутри этой группы паттернов есть механизм который неявно присутствует в 
каждом паттерне - передача екземпляра созданного обьекта тому обьекту,
 который в нем нуждается. Это называется - иньекция зависимости.
Иначе говоря Внедрение зависимости.
Зависимости к слову это Краеугольный камень ООП. Точнее нет не камень,
ибо камнями принято считать абстракции и прочие инкапсуляции. 
Это сама суть ООП в том виде как ее описывают теоретики или для практиков
сама идея обьектов которые взаимодействуют а значит и зависят друг от друга.
Ее тоже можно отнести к шаблонам проектирования, хотя в ГоФ она и не описанна,
зато заняла достойное место в SOLID как Dependensy Inversion.
Внедрение зависимости это определение где и когда создается экземпляр класса.
Собственно 
Говоря словами с википедии В полном соответствии с принципом единственной 
ответственности объект отдаёт заботу о построении требуемых ему зависимостей
 внешнему, специально предназначенному для этого общему механизму.
Смысл шаблона в том, что зависимость обьекта производится в одном месте 
а применение-употребление в другом. Код клиента - пользователя просто 
получает готовый внешний обьект и использует его.
Если хочется пить, не нужно бежать к холодильнику и брать напиток самостоятельно.
Обозначьте свою потребность. Т.е скажите жене, соседу,
 домработнице, что желаете выпить холодненького и дождитесь пока вам
обозначат наличие напитка.
При истином внедрении зависимости объект полностью пассивен и не 
предпринимает вообще никаких шагов для выяснения своих зависимостей,
а предоставляет для этого сеттеры и/или принимает своим конструктором аргументы,
 посредством которых внедряются зависимости.
Использование данного "шаблона" дает огромные возможности ибо позволяет менять 
данные прямо на лету со всеми своими внутренимы связями.
Внедрение зависимости возможно как через конструктор, что дает одни способы
 манипуляции состоянием обьекта так и через свойства обьекта.
